# ============================================
# AUTHENTICATION SERVICE ENVIRONMENT VARIABLES
# ============================================

# Database Configuration
DATABASE_URL=postgresql://username:password@localhost:5432/database_name

# Redis Configuration  
REDIS_HOST=localhost
REDIS_PORT=6379

# RabbitMQ Configuration
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_USER=admin
RABBITMQ_PASSWORD=admin

# JWT Configuration
# IMPORTANT: Change these secrets in production!
JWT_SECRET=your-super-secret-jwt-key-change-in-production-min-32-chars
JWT_EXPIRES_IN=15m
JWT_REFRESH_SECRET=your-super-secret-refresh-jwt-key-change-in-production-min-32-chars
JWT_REFRESH_EXPIRES_IN=7d

# Google OAuth Configuration
# Get credentials from: https://console.cloud.google.com/
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_REDIRECT_URI=http://localhost:3001/auth/callback/google

# GitHub OAuth Configuration
# Get credentials from: https://github.com/settings/developers
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret
GITHUB_REDIRECT_URI=http://localhost:3001/auth/callback/github

# Microsoft Azure AD (MSAL) Configuration
# Get credentials from: https://portal.azure.com/
APP_AZURE_CLIENT_ID=your-azure-client-id
APP_AZURE_TENANT_ID=your-azure-tenant-id
APP_AZURE_REDIRECT_URI=http://localhost:3001/auth/msal/callback
AZURE_CLIENT_SECRET=your-azure-client-secret
APP_MSAL_REDIRECT_URI=http://localhost:3001/auth/msal

# Service Configuration
PORT=3001
USER_SERVICE_HOST=localhost
USER_SERVICE_PORT=3002

# ============================================
# SETUP INSTRUCTIONS:
# ============================================
# 
# 1. Copy this file to authenication/.env
# 2. Replace all placeholder values with your actual credentials
# 3. Generate strong JWT secrets (at least 32 characters)
#
# To generate random secrets, use:
# - Node.js: require('crypto').randomBytes(32).toString('hex')
# - OpenSSL: openssl rand -base64 32
# - Online: https://www.grc.com/passwords.htm
#
# OAuth Provider Setup:
#
# Google OAuth:
# 1. Go to https://console.cloud.google.com/
# 2. Create a project or select existing
# 3. Enable Google+ API
# 4. Create OAuth 2.0 credentials
# 5. Add authorized redirect URI: http://localhost:3001/auth/callback/google
#
# GitHub OAuth:
# 1. Go to https://github.com/settings/developers
# 2. Click "New OAuth App"
# 3. Set Authorization callback URL: http://localhost:3001/auth/callback/github
#
# Microsoft Azure AD:
# 1. Go to https://portal.azure.com/
# 2. Navigate to Azure Active Directory > App registrations
# 3. Register new application
# 4. Add redirect URI: http://localhost:3001/auth/msal/callback
# 5. Create client secret
# ============================================
