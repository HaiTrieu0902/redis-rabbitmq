{
  "info": {
    "name": "Redis MQ - Microservices API Collection",
    "description": "API Collection for Authentication, User Management, and Transaction Streaming Microservices",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "auth_url",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "user_url",
      "value": "http://localhost:3002",
      "type": "string"
    },
    {
      "key": "streaming_url",
      "value": "http://localhost:3003",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "transaction_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication Service",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/auth/health",
              "host": ["{{auth_url}}"],
              "path": ["auth", "health"]
            }
          }
        },
        {
          "name": "Google OAuth Login",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/auth/google",
              "host": ["{{auth_url}}"],
              "path": ["auth", "google"]
            },
            "description": "Open this URL in browser to login with Google"
          }
        },
        {
          "name": "GitHub OAuth Login",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/auth/github",
              "host": ["{{auth_url}}"],
              "path": ["auth", "github"]
            },
            "description": "Open this URL in browser to login with GitHub"
          }
        },
        {
          "name": "Microsoft MSAL Login",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/auth/msal",
              "host": ["{{auth_url}}"],
              "path": ["auth", "msal"]
            },
            "description": "Open this URL in browser to login with Microsoft"
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    pm.collectionVariables.set('refresh_token', response.refresh_token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{auth_url}}/auth/refresh",
              "host": ["{{auth_url}}"],
              "path": ["auth", "refresh"]
            }
          }
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{auth_url}}/auth/me",
              "host": ["{{auth_url}}"],
              "path": ["auth", "me"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{auth_url}}/auth/logout",
              "host": ["{{auth_url}}"],
              "path": ["auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "User Service",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{user_url}}/users/health",
              "host": ["{{user_url}}"],
              "path": ["users", "health"]
            }
          }
        },
        {
          "name": "Get My Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{user_url}}/users/me",
              "host": ["{{user_url}}"],
              "path": ["users", "me"]
            }
          }
        },
        {
          "name": "Update My Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Name\",\n  \"avatar_url\": \"https://example.com/avatar.jpg\"\n}"
            },
            "url": {
              "raw": "{{user_url}}/users/me",
              "host": ["{{user_url}}"],
              "path": ["users", "me"]
            }
          }
        },
        {
          "name": "Get User By ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{user_url}}/users/:userId",
              "host": ["{{user_url}}"],
              "path": ["users", ":userId"],
              "variable": [
                {
                  "key": "userId",
                  "value": "user-uuid-here"
                }
              ]
            }
          }
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{user_url}}/users?limit=20&offset=0",
              "host": ["{{user_url}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            }
          }
        },
        {
          "name": "Update User By ID",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"New Name\",\n  \"avatar_url\": \"https://example.com/new-avatar.jpg\"\n}"
            },
            "url": {
              "raw": "{{user_url}}/users/:userId",
              "host": ["{{user_url}}"],
              "path": ["users", ":userId"],
              "variable": [
                {
                  "key": "userId",
                  "value": "user-uuid-here"
                }
              ]
            }
          }
        },
        {
          "name": "Delete My Account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{user_url}}/users/me",
              "host": ["{{user_url}}"],
              "path": ["users", "me"]
            }
          }
        },
        {
          "name": "Delete User By ID",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{user_url}}/users/:userId",
              "host": ["{{user_url}}"],
              "path": ["users", ":userId"],
              "variable": [
                {
                  "key": "userId",
                  "value": "user-uuid-here"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Streaming Service (Go)",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{streaming_url}}/health",
              "host": ["{{streaming_url}}"],
              "path": ["health"]
            },
            "description": "Check if streaming service is running"
          }
        },
        {
          "name": "Create Transaction",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.collectionVariables.set('transaction_id', response.data.id);",
                  "        console.log('Transaction ID saved:', response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 100.50,\n  \"currency\": \"VND\",\n  \"transaction_type\": \"deposit\",\n  \"description\": \"Monthly deposit via Postman\"\n}"
            },
            "url": {
              "raw": "{{streaming_url}}/api/v1/transactions",
              "host": ["{{streaming_url}}"],
              "path": ["api", "v1", "transactions"]
            },
            "description": "Create a new transaction. Transaction types: deposit, withdraw, purchase"
          }
        },
        {
          "name": "Get Transaction By ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{streaming_url}}/api/v1/transactions/:transactionId",
              "host": ["{{streaming_url}}"],
              "path": ["api", "v1", "transactions", ":transactionId"],
              "variable": [
                {
                  "key": "transactionId",
                  "value": "{{transaction_id}}",
                  "description": "UUID of the transaction"
                }
              ]
            },
            "description": "Retrieve a specific transaction by its UUID"
          }
        },
        {
          "name": "Get My Transactions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{streaming_url}}/api/v1/transactions/my?page=1&page_size=10",
              "host": ["{{streaming_url}}"],
              "path": ["api", "v1", "transactions", "my"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number (default: 1)"
                },
                {
                  "key": "page_size",
                  "value": "10",
                  "description": "Items per page (default: 10, max: 100)"
                }
              ]
            },
            "description": "Get all transactions for the authenticated user with pagination"
          }
        },
        {
          "name": "Update Transaction Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"success\"\n}"
            },
            "url": {
              "raw": "{{streaming_url}}/api/v1/transactions/:transactionId/status",
              "host": ["{{streaming_url}}"],
              "path": ["api", "v1", "transactions", ":transactionId", "status"],
              "variable": [
                {
                  "key": "transactionId",
                  "value": "{{transaction_id}}",
                  "description": "UUID of the transaction"
                }
              ]
            },
            "description": "Update transaction status. Valid statuses: pending, success, failed"
          }
        },
        {
          "name": "Get All Transactions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{streaming_url}}/api/v1/transactions?page=1&page_size=20",
              "host": ["{{streaming_url}}"],
              "path": ["api", "v1", "transactions"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number (default: 1)"
                },
                {
                  "key": "page_size",
                  "value": "20",
                  "description": "Items per page (default: 10, max: 100)"
                }
              ]
            },
            "description": "Get all transactions in the system (admin function)"
          }
        },
        {
          "name": "Get Transactions By Status - Pending",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{streaming_url}}/api/v1/transactions/status?status=pending&page=1&page_size=10",
              "host": ["{{streaming_url}}"],
              "path": ["api", "v1", "transactions", "status"],
              "query": [
                {
                  "key": "status",
                  "value": "pending",
                  "description": "Transaction status: pending, success, or failed"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "page_size",
                  "value": "10",
                  "description": "Items per page"
                }
              ]
            },
            "description": "Filter transactions by status with pagination"
          }
        },
        {
          "name": "Get Transactions By Status - Success",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{streaming_url}}/api/v1/transactions/status?status=success&page=1&page_size=10",
              "host": ["{{streaming_url}}"],
              "path": ["api", "v1", "transactions", "status"],
              "query": [
                {
                  "key": "status",
                  "value": "success"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "page_size",
                  "value": "10"
                }
              ]
            },
            "description": "Get all successful transactions"
          }
        },
        {
          "name": "Get Transactions By Status - Failed",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{streaming_url}}/api/v1/transactions/status?status=failed&page=1&page_size=10",
              "host": ["{{streaming_url}}"],
              "path": ["api", "v1", "transactions", "status"],
              "query": [
                {
                  "key": "status",
                  "value": "failed"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "page_size",
                  "value": "10"
                }
              ]
            },
            "description": "Get all failed transactions"
          }
        },
        {
          "name": "Create Withdraw Transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 50.00,\n  \"currency\": \"USD\",\n  \"transaction_type\": \"withdraw\",\n  \"description\": \"Withdraw funds\"\n}"
            },
            "url": {
              "raw": "{{streaming_url}}/api/v1/transactions",
              "host": ["{{streaming_url}}"],
              "path": ["api", "v1", "transactions"]
            },
            "description": "Example: Create a withdrawal transaction"
          }
        },
        {
          "name": "Create Purchase Transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 25.99,\n  \"currency\": \"USD\",\n  \"transaction_type\": \"purchase\",\n  \"description\": \"Purchase item XYZ\"\n}"
            },
            "url": {
              "raw": "{{streaming_url}}/api/v1/transactions",
              "host": ["{{streaming_url}}"],
              "path": ["api", "v1", "transactions"]
            },
            "description": "Example: Create a purchase transaction"
          }
        }
      ],
      "description": "Go-based streaming service for transaction management with RabbitMQ event publishing"
    }
  ]
}
